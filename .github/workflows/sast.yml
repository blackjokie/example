name: SonarQube Analysis for Golang with GoSec

on:
  push:
    branches:
      - master  # Modify branch name as needed
  pull_request:
      types: [opened, synchronize, reopened]
jobs:
  sonarqube-analysis:
    name: SonarQube Analysis
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on    

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install and Run GoSec
        uses: securego/gosec@master
        with:
          args: |
            -no-fail -tests -fmt=sonarqube -out=report.json ./...
            
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: artifact
          path: report.json

      - name: Setup SonarQube Scanner    
        run: |
          wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip -O /tmp/sonar-scanner.zip
          unzip /tmp/sonar-scanner.zip -d /tmp
          mv /tmp/sonar-scanner-* /tmp/sonar-scanner
          rm /tmp/sonar-scanner.zip
          export PATH="$PATH:/tmp/sonar-scanner/bin"

          sonar-scanner \
            -Dsonar.projectKey=example \
            -Dsonar.sources=. \
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
            -Dsonar.token=${{ secrets.SONAR_TOKEN }}
            -Dsonar.externalIssuesReportPaths=report.json

      - name: Build and Test
        run: |
          go mod download
          go test -coverprofile=./coverage.out ./...

      - name: Publish Test Coverage to SonarQube
        uses: actions/upload-artifact@v2
        with:
          name: coverage-report
          path: ./coverage.out

